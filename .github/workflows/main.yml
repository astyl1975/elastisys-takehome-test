
name: nodeapp Deploy
# Build with Docker and deploy an app to AKS with Helm

on:
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
  # Trigger the action manually from the UI
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "astylacr"
  CONTAINER_NAME: "nodeapp"
  RESOURCE_GROUP: "a.stylianou"
  CLUSTER_NAME: "astyl_AKS"
  CHART_PATH: "./elastisys/node-hostname/helmChart"
  CHART_OVERRIDE_PATH: "./elastisys/node-hostname/helmChart/values.yaml"
  
jobs:

  build:
    name: buildnode
    runs-on: ubuntu-latest

    steps:
    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - uses: actions/checkout@v4
    - name: Build the Docker image hello
      run: docker build ./elastisys/node-hostname --file ./elastisys/node-hostname/Dockerfile --tag nodeapp:v1

    - uses: actions/checkout@v4
    - name: tag the Docker image hello
      run: docker image tag docker.io/library/nodeapp:v1 astylacr.azurecr.io/nodeapp:v1
      
    - uses: actions/checkout@v4
    - name: push the Docker image hello
      run: docker push astylacr.azurecr.io/nodeapp:v1


  deploy:
    name: deploynode
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    #needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Runs Helm to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.CHART_PATH }}
          overrideFiles: ${{ env.CHART_OVERRIDE_PATH }}
          overrides: |
            replicas:2
          helm-version: "latest"
        id: bake

      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME1 }}:v1 #${{ github.sha }}            
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME2 }}:v1 #${{ github.sha }}
