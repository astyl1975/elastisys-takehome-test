apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp
spec:
### Deployment Strategy for Rolling Updates
  strategy:
   type: RollingUpdate
   rollingUpdate:
     maxSurge: 1
############################################
  replicas: 3
  selector:
    matchLabels:
      app: nodeapp
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: nodeapp
        image: astylacr.azurecr.io/node-docker-app:v5
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
          limits:
            cpu: 75m
            memory: 128Mi
        #startupProbe:
        #  httpGet:
        #    path: /
        #    port: 3000
        #  failureThreshold: 5
        #  initialDelaySeconds: 20
        #  periodSeconds: 10
        #readinessProbe:
        #  httpGet:
        #    path: /
        #    port: 3000
        #  failureThreshold: 3
        #  initialDelaySeconds: 3
        #  periodSeconds: 5
        #livenessProbe:
        #  httpGet:
        #    path: /
        #    port: 3000
        #  failureThreshold: 5
        #  initialDelaySeconds: 3
        #  periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: nodelb
spec:
  ports:
  - port: 80
    targetPort: 3000
    #nodePort: 8088
  selector:
    app: nodeapp
  type: ClusterIP # LoadBalancer # 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"

spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  tls:
  - hosts:
    - aksnginx.magpie.gr
    secretName: quickstart-example-tls
  rules:
  #- host: aksnginx.magpie.gr
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nodelb
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: astyl1975@gmail.com
    # The ACME certificate profile
    profile: tlsserver
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            ingressClassName: webapprouting.kubernetes.azure.com
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: astyl1975@gmail.com
    # The ACME certificate profile
    profile: tlsserver
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            ingressClassName: webapprouting.kubernetes.azure.com
---
